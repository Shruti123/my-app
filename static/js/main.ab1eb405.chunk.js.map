{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlFor","TextForm","useState","txt","setText","style","color","heading","value","onChange","event","target","rows","backgroundColor","newString","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newTxt","split","join","length","Alert","alert","msg","defaultProps","App","setMode","setAlert","showAlert","message","typ","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ab1eb405.chunk.js","sourcesContent":["import React from 'react'\nimport Proptypes from 'prop-types'\n//import {Link} from 'react-router-dom';\n\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n           */}\n           <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n              </li>\n             {/*  <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">About</Link>\n              </li> */}\n              </ul>\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick= {props.toggleMode} id=\"flexSwitchCheckDefault\"/>\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n</div>\n          </div>\n        </div>\n      </nav>\n    );\n}\n\nNavbar.propTypes = {\n    title:Proptypes.string.isRequired};\nNavbar.defaultProps = {\n    title:'This is my default value'\n}","import React from 'react'\nimport { useState } from 'react'\n\n\nexport default function TextForm(props) {\n    const [txt, setText] = useState(\"\");\n    const onChange = (event)=> {\n        setText(event.target.value);     \n     }\n \n     const toUprCase = ()=> {\n         let newString = txt.toUpperCase();\n         setText(newString);\n         \n     }\n \n     const toLowCase = ()=> {\n         let newString = txt.toLowerCase();\n         setText(newString);\n     }\n \n     const clearTxt = ()=> {\n         setText('');\n     }\n \n     const copyText = ()=> {\n       let txt = document.getElementById('myBox');\n       txt.select();\n       navigator.clipboard.writeText(txt.value);\n     }\n\n     const handleExtraSpace = ()=> {\n        let newTxt = txt.split(/[ ]+/);\n        setText(newTxt.join(\" \"));\n    \n     }\n     \n\n    return (\n        <>\n        <h1 style={{color: props.mode==='light'?'black':'white'}}>{props.heading}</h1>\n        <div className=\"mb-3\" >\n        <textarea className=\"form-control\" value={txt} id=\"myBox\" onChange= {onChange}  rows=\"8\" \n        style={{color:props.mode==='light'?'black':'white',backgroundColor : props.mode==='light'? 'white':'#092f54'}}></textarea>\n        <button className=\"btn btn-primary my-3\" onClick={toUprCase}>Convert to UpperCase</button>\n        <button className=\"btn btn-primary mx-3\" onClick={toLowCase}>Convert to Lower Case</button>\n        <button className=\"btn btn-primary mx-3\" onClick={clearTxt}>Clear Text</button>\n        <button className=\"btn btn-primary mx-3\" onClick={copyText}>Copy Text</button>\n        <button className=\"btn btn-primary mx-3\" onClick={handleExtraSpace}>Remove Extra Space</button>\n        </div>\n        <div className=\"container my-2\" style={{color:props.mode==='light'?'black':'white',\n        backgroundColor : props.mode==='light'? 'white':'#092f54'}}>\n            <h2>Your Text Summary</h2>\n            <p>{txt.split(' ').length} words and {txt.length} characters</p>\n            <p>{txt.length*0.008} minutes read </p>\n            <h2>Preview</h2>\n            <p>{txt.length>0?txt:\"Write something to show\"}</p>\n        </div>\n        </>\n    \n    );\n    \n}\n\n\n","import React from 'react'\n\nexport default function Alert(props) {\n    return (\n       props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">{props.alert.msg}\n           </div>\n    );\n}\n","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n/* import {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\"; */  //just for publishing on git pages\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, typ)=> {\n    setAlert({\n      msg: message,\n      type:typ\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=> {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#092f54';\n      showAlert(\"Dark Mode has been enabled\",'success');\n      //document.title = 'TextUtils-DarkMode';\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\",'warning');\n     // document.title = 'TextUtils-LightMode';\n    }\n  }\n  return (\n    <>\n  {/*   <Router> */}\n    <Navbar title =\"TextUtils\" mode={mode} toggleMode = {toggleMode}/>\n     <Alert alert={alert}/>\n     <div className=\"container my-3\">\n     <TextForm heading=\"Enter the text to analyze below\" mode = {mode} alert={alert}/> \n  {/*    <Routes>\n          <Route path=\"/about\" element={<About />}/>\n             <Route path=\"/\" element={\n             <TextForm heading=\"Enter the text to analyze below\" mode = {mode} alert={alert}/> } /> \n        </Routes> */}\n        </div>\n    {/* </Router>      */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}